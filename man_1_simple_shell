.TH man 1 "16 April 2020" "v. 1.0" "Shell man page hsh"
.SH NAME
.B man hsh.
The Shell is an sh-compatible command language interpreter that executes commands from the stand input or from a file.
- A basic UNIX command line interpreter.
.SH SYNOPSIS
All files in this repository are designed to be compiled with the GNU Compiler Collection v. "gcc 4.8.4" in the linux environment of "Ubuntu 14.04.5 LTS".  When compiled, the executable file replicates a shell, which is a user interface used to access the services.  This shell has a set of customizable built-in commands and also integrates with other commands located in the system's PATH.  The output and functionality is designed to replicate the output of the "sh" shell and some commands.

.SH DESCRIPTION
The shell is a program that reads line by line from a file or from the terminal, then interprets it and executes it if the line is a valid command.  Otherwise, it returns an error message corresponding to the requested action.

.SH USAGE
All the files are to be compiled on an Ubuntu 14.04 LTS machine with "gcc -pedantic -Werror -Wextra -Wall *.c -o hsh"

Example:
.br
$ gcc -pedantic -Werror -Wextra -Wall *.c -o hsh

Once compiled, to start the program, run: ./hsh

Example:
.br
$ ./hsh

To exit the program, run: exit

Example:
.br
$ exit

.SH SIMPLE COMMANDS
If a simple command has been recognized, the shell performs the following actions:
.br
You can enter a command in any of the ways:
.br

command [arguments] or path/command [arguments].
.br

The shell will go looking for it.  If it gets it, it will execute the corresponding action, otherwise it will return an error indicating that it is not a valid command.

.SH BUILT-INS
This section lists the built-in commands that need to perform some operation that cannot be done by a separate process.
.br
.B - exit:
Terminate the shell process.  If exitstatus is given it is used as the exit status of the shell; otherwise the exit status of the preceding command is used.  To use it you must write: exit
.br
.B - env:
Prints out the current environment. To use it you must write: env
.br
.B - help:
Show the shell's help options. To use it you must write: help exit, help env or help help.

.SH FUNTIONS CREATED
The following functions were created to replace the functions of the standard libraries:
.br
.B - srtlen:
determine length of a string.
.br
.B - srtcmp:
compare two strings. If the result is 0, there is a match between the strings.
.br
.B - strdup:
duplicates a string, placing it in a new memory position with the same size and elements of the original.
.br
.B - strconcat:
concatenate two strings.
.br
.B - atoi:
converts a string into an integer.
.SH SEE ALSO
List of allowed functions and system calls: `access`, `chdir`, `close`, `closedir`, `execve`, `exit`, `fork`, `free`, `fstat`, `getcwd`, `getline`, `kill`, `lstat`, `malloc`, `open`, `opendir`, `perror`, `read`, `readdir`, `signal`, `stat`, `strtok`, `wait`, `waitpid`, `wait3`, `wait4`, `write`, `_exit`.

.SH RETURN VALUE
The shell will exit with status 0 unless status is specified.

.SH BUGS
No known bugs.
.SH AUTHORS
Andrés Callejas, Marlon García